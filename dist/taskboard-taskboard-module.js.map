{"version":3,"sources":["./src/app/taskboard/crud-modal/crud-modal.component.html","./src/app/taskboard/taskboard.component.html","./src/app/taskboard/crud-modal/crud-modal.component.scss","./src/app/taskboard/crud-modal/crud-modal.component.ts","./src/app/taskboard/taskboard-routing.module.ts","./src/app/taskboard/taskboard.component.scss","./src/app/taskboard/taskboard.component.ts","./src/app/taskboard/taskboard.model.ts","./src/app/taskboard/taskboard.module.ts","./src/app/taskboard/taskboard.service.ts"],"names":[],"mappings":"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","file":"taskboard-taskboard-module.js","sourcesContent":["export default \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">{{ModalTitle}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n    x\\n  </button>\\n</div>\\n<form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n  <div class=\\\"modal-body taskboard-modal\\\">\\n    <div class=\\\"container\\\">\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\n        <div class=\\\"form-control-position\\\">\\n          <i class=\\\"icon-emoticon-smile\\\"></i>\\n        </div>\\n        <input type=\\\"text\\\" [formControl]=\\\"myForm.controls['title']\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\" id=\\\"todoTitle\\\"\\n          placeholder=\\\"عنوان\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todoTitle>\\n        <div class=\\\"form-control-position control-position-right\\\">\\n          <i class=\\\"ft-image\\\"></i>\\n        </div>\\n      </fieldset>\\n      <fieldset class=\\\"form-group position-relative has-icon-left\\\">\\n        <div class=\\\"form-control-position\\\">\\n          <i class=\\\"icon-emoticon-smile\\\"></i>\\n        </div>\\n        <input type=\\\"text\\\" [formControl]=\\\"myForm.controls['message']\\\" formControlName=\\\"message\\\" class=\\\"form-control\\\" id=\\\"todoMessage\\\"\\n          placeholder=\\\"پیام\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" required #todoMessage>\\n        <div class=\\\"form-control-position control-position-right\\\">\\n          <i class=\\\"ft-image\\\"></i>\\n        </div>\\n      </fieldset>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer taskboard-modal-footer\\\">\\n    <button class=\\\"btn btn-success btn-save\\\" [disabled]=\\\"!myForm.valid\\\">\\n      ذخیره\\n    </button>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"row mt-2\\\">\\n  <div class=\\\"col-6\\\">\\n    <div class=\\\"content-header text-left\\\">مدیریت وظایف</div>\\n    <p class=\\\"content-sub-header\\\"></p>\\n  </div>\\n  <div class=\\\"col-6 text-right\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-danger\\\" (click)=\\\"addTask()\\\">\\n      <i class=\\\"fa fa-paper-plane-o d-lg-none d-block\\\"></i>\\n      <span class=\\\"d-lg-block d-none\\\">ایحاد</span>\\n    </button>\\n  </div>\\n</div>\\n<!-- Taskboard Starts -->\\n<section id=\\\"taskboard\\\">\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-list mr-1 float-left\\\"></i> در حال انجام</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"New\\\" [dragulaModel]='todo'>\\n        <div *ngFor='let todo of todo' [attr.task-id]=\\\"todo.taskId\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 primary float-left\\\">{{todo.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(todo.taskId);\\\"></i>\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(todo.taskId);\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{todo.taskMessage}}</p>\\n              <img [src]=\\\"[todo.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"primary\\\">{{todo.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-trending-up mr-1  float-left\\\"></i> در حال پردازش</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"In-Process\\\" [dragulaModel]='inProcess'>\\n        <div *ngFor='let inProcess of inProcess' [attr.task-id]=\\\"inProcess.taskId\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 info float-left\\\">{{inProcess.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(inProcess.taskId);\\\"></i>\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(inProcess.taskId);\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{inProcess.taskMessage}}</p>\\n              <img [src]=\\\"[inProcess.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"info\\\">{{inProcess.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-thumbs-up mr-1  float-left\\\"></i>کامل شده</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"Completed\\\" [dragulaModel]='completed'>\\n        <div *ngFor='let completed of completed' [attr.task-id]=\\\"completed.taskId\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 success float-left\\\">{{completed.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(completed.taskId);\\\"></i>\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(completed.taskId);\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{completed.taskMessage}}</p>\\n              <img [src]=\\\"[completed.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"success\\\">{{completed.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-3 col-12\\\">\\n      <h4 class=\\\"ml-2 mt-2 text-bold-500 text-left\\\"><i class=\\\"ft-alert-octagon mr-1  float-left\\\"></i>در حال برگزاری</h4>\\n      <div class='dragdrop-container' [dragula]='\\\"task-group\\\"' id=\\\"Pending\\\" [dragulaModel]='backLog'>\\n        <div *ngFor='let backLog of backLog' [attr.task-id]=\\\"backLog.taskId\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body pt-3 text-left\\\">\\n              <div class=\\\"clearfix\\\">\\n                <h5 class=\\\"text-bold-500 warning float-left\\\">{{backLog.taskTitle}}</h5>\\n                <div class=\\\"actions float-right\\\">\\n                  <i class=\\\"ft-edit cursor-pointer mr-1 info\\\" (click)=\\\"editTask(backLog.taskId);\\\"></i>\\n                  <i class=\\\"ft-trash-2 cursor-pointer danger\\\" (click)=\\\"deleteTask(backLog.taskId);\\\"></i>\\n                </div>\\n              </div>\\n              <p>{{backLog.taskMessage}}</p>\\n              <img [src]=\\\"[backLog.assignedTo]\\\" class=\\\"rounded-circle width-50 mr-2\\\"> <span class=\\\"warning\\\">{{backLog.createdOn}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n</section>\\n<!-- Taskboard Ends -->\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tib2FyZC9jcnVkLW1vZGFsL2NydWQtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-crud-modal',\n  templateUrl: './crud-modal.component.html',\n  styleUrls: ['./crud-modal.component.scss']\n})\nexport class CrudModalComponent implements OnInit{\n\n  ModalTitle = '';\n  @Input() id: number;\n  @Input() data: {};\n  myForm: FormGroup;\n  constructor(\n   public activeModal: NgbActiveModal,\n   private formBuilder: FormBuilder\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.buildItemForm(this.data);\n    if(this.id === 0) {\n      this.ModalTitle = \"افزودن تسک\";\n    }\n    else {\n      this.ModalTitle = \"ویرایش تسک\";\n    }\n  }\n\n  private buildItemForm(item) {\n    this.myForm = this.formBuilder.group({\n      title: [item.title || '', Validators.required],\n      message: [item.message || '', Validators.required],\n    });\n  }\n  submitForm() {\n    this.activeModal.close(this.myForm.value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TaskboardComponent } from './taskboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: TaskboardComponent,\n    data: {\n      title: 'Taskboard'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TaskboardRoutingModule { }","export default \".gh-fork {\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: 0;\\n}\\n\\n/* dragula-specific example page styles */\\n\\n.dragdrop-wrapper {\\n  display: table;\\n}\\n\\n/* .dragdrop-container {\\n   display: table-cell;\\n   background-color: rgba(255, 255, 255, 0.2);\\n   width: 25%;\\n } */\\n\\n.dragdrop-container:nth-child(odd) {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n\\n/*\\n  * note that styling gu-mirror directly is a bad practice because it's too generic.\\n  * you're better off giving the draggable elements a unique class and styling that directly!\\n  */\\n\\n.dragdrop-container > div,\\n.gu-mirror {\\n  -webkit-transition: opacity 0.4s ease-in-out;\\n  transition: opacity 0.4s ease-in-out;\\n}\\n\\n.dragdrop-container > div {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -webkit-grab;\\n}\\n\\n.gu-mirror {\\n  cursor: grabbing;\\n  cursor: -webkit-grabbing;\\n}\\n\\n.dragdrop-container .ex-moved {\\n  background-color: #e74c3c;\\n}\\n\\n.dragdrop-container.ex-over {\\n  background-color: rgba(255, 255, 255, 0.3);\\n}\\n\\n#left-lovehandles > div,\\n#right-lovehandles > div {\\n  cursor: initial;\\n}\\n\\n.handle {\\n  padding: 0 5px;\\n  margin-right: 5px;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  cursor: move;\\n}\\n\\n.image-thing {\\n  margin: 20px 0;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.slack-join {\\n  position: absolute;\\n  font-weight: normal;\\n  font-size: 14px;\\n  right: 10px;\\n  top: 50%;\\n  margin-top: -8px;\\n  line-height: 16px;\\n}\\n\\n.taskboard-modal-footer .btn-save {\\n  color: #fff !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFza2JvYXJkL0M6XFxVc2Vyc1xcTWFzaWhcXERlc2t0b3BcXGZyb250XFxhcGV4X3J0bC9zcmNcXGFwcFxcdGFza2JvYXJkXFx0YXNrYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Rhc2tib2FyZC90YXNrYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUM7RUFDRSxlQUFBO0VBQ0EsTUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDQ0g7O0FERUMseUNBQUE7O0FBQ0E7RUFDRSxjQUFBO0FDQ0g7O0FERUM7Ozs7SUFBQTs7QUFLQTtFQUNFLG9DQUFBO0FDQ0g7O0FERUM7OztHQUFBOztBQUlBOztFQUtFLDRDQUFBO0VBQUEsb0NBQUE7QUNGSDs7QURLQztFQUNFLFlBQUE7RUFDQSxZQUFBO0VBRUEsb0JBQUE7QUNGSDs7QURLQztFQUNFLGdCQUFBO0VBRUEsd0JBQUE7QUNGSDs7QURLQztFQUNFLHlCQUFBO0FDRkg7O0FES0M7RUFDRSwwQ0FBQTtBQ0ZIOztBREtDOztFQUVFLGVBQUE7QUNGSDs7QURLQztFQUNFLGNBQUE7RUFDQSxpQkFBQTtFQUNBLG9DQUFBO0VBQ0EsWUFBQTtBQ0ZIOztBREtDO0VBQ0UsY0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0ZIOztBREtDO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsUUFBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUNGSDs7QURNRztFQUNFLHNCQUFBO0FDSEwiLCJmaWxlIjoic3JjL2FwcC90YXNrYm9hcmQvdGFza2JvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIC5naC1mb3JrIHtcbiAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgIHRvcDogMDtcbiAgIHJpZ2h0OiAwO1xuICAgYm9yZGVyOiAwO1xuIH1cblxuIC8qIGRyYWd1bGEtc3BlY2lmaWMgZXhhbXBsZSBwYWdlIHN0eWxlcyAqL1xuIC5kcmFnZHJvcC13cmFwcGVyIHtcbiAgIGRpc3BsYXk6IHRhYmxlO1xuIH1cblxuIC8qIC5kcmFnZHJvcC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xuICAgIHdpZHRoOiAyNSU7XG4gIH0gKi9cbiAuZHJhZ2Ryb3AtY29udGFpbmVyOm50aC1jaGlsZChvZGQpIHtcbiAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiB9XG5cbiAvKlxuICAgKiBub3RlIHRoYXQgc3R5bGluZyBndS1taXJyb3IgZGlyZWN0bHkgaXMgYSBiYWQgcHJhY3RpY2UgYmVjYXVzZSBpdCdzIHRvbyBnZW5lcmljLlxuICAgKiB5b3UncmUgYmV0dGVyIG9mZiBnaXZpbmcgdGhlIGRyYWdnYWJsZSBlbGVtZW50cyBhIHVuaXF1ZSBjbGFzcyBhbmQgc3R5bGluZyB0aGF0IGRpcmVjdGx5IVxuICAgKi9cbiAuZHJhZ2Ryb3AtY29udGFpbmVyPmRpdixcbiAuZ3UtbWlycm9yIHtcbiAgIC8vIG1hcmdpbjogMTBweDtcbiAgIC8vIHBhZGRpbmc6IDEwcHg7XG4gICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbi1vdXQ7XG4gfVxuXG4gLmRyYWdkcm9wLWNvbnRhaW5lcj5kaXYge1xuICAgY3Vyc29yOiBtb3ZlO1xuICAgY3Vyc29yOiBncmFiO1xuICAgY3Vyc29yOiAtbW96LWdyYWI7XG4gICBjdXJzb3I6IC13ZWJraXQtZ3JhYjtcbiB9XG5cbiAuZ3UtbWlycm9yIHtcbiAgIGN1cnNvcjogZ3JhYmJpbmc7XG4gICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XG4gICBjdXJzb3I6IC13ZWJraXQtZ3JhYmJpbmc7XG4gfVxuXG4gLmRyYWdkcm9wLWNvbnRhaW5lciAuZXgtbW92ZWQge1xuICAgYmFja2dyb3VuZC1jb2xvcjogI2U3NGMzYztcbiB9XG5cbiAuZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xuIH1cblxuICNsZWZ0LWxvdmVoYW5kbGVzPmRpdixcbiAjcmlnaHQtbG92ZWhhbmRsZXM+ZGl2IHtcbiAgIGN1cnNvcjogaW5pdGlhbDtcbiB9XG5cbiAuaGFuZGxlIHtcbiAgIHBhZGRpbmc6IDAgNXB4O1xuICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICBjdXJzb3I6IG1vdmU7XG4gfVxuXG4gLmltYWdlLXRoaW5nIHtcbiAgIG1hcmdpbjogMjBweCAwO1xuICAgZGlzcGxheTogYmxvY2s7XG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gfVxuXG4gLnNsYWNrLWpvaW4ge1xuICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgIGZvbnQtc2l6ZTogMTRweDtcbiAgIHJpZ2h0OiAxMHB4O1xuICAgdG9wOiA1MCU7XG4gICBtYXJnaW4tdG9wOiAtOHB4O1xuICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gfVxuXG4gLnRhc2tib2FyZC1tb2RhbC1mb290ZXIge1xuICAgLmJ0bi1zYXZlIHtcbiAgICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgIH1cbiB9XG4iLCIuZ2gtZm9yayB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKiBkcmFndWxhLXNwZWNpZmljIGV4YW1wbGUgcGFnZSBzdHlsZXMgKi9cbi5kcmFnZHJvcC13cmFwcGVyIHtcbiAgZGlzcGxheTogdGFibGU7XG59XG5cbi8qIC5kcmFnZHJvcC1jb250YWluZXIge1xuICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcbiAgIHdpZHRoOiAyNSU7XG4gfSAqL1xuLmRyYWdkcm9wLWNvbnRhaW5lcjpudGgtY2hpbGQob2RkKSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuLypcbiAgKiBub3RlIHRoYXQgc3R5bGluZyBndS1taXJyb3IgZGlyZWN0bHkgaXMgYSBiYWQgcHJhY3RpY2UgYmVjYXVzZSBpdCdzIHRvbyBnZW5lcmljLlxuICAqIHlvdSdyZSBiZXR0ZXIgb2ZmIGdpdmluZyB0aGUgZHJhZ2dhYmxlIGVsZW1lbnRzIGEgdW5pcXVlIGNsYXNzIGFuZCBzdHlsaW5nIHRoYXQgZGlyZWN0bHkhXG4gICovXG4uZHJhZ2Ryb3AtY29udGFpbmVyID4gZGl2LFxuLmd1LW1pcnJvciB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlLWluLW91dDtcbn1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciA+IGRpdiB7XG4gIGN1cnNvcjogbW92ZTtcbiAgY3Vyc29yOiBncmFiO1xuICBjdXJzb3I6IC1tb3otZ3JhYjtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG59XG5cbi5ndS1taXJyb3Ige1xuICBjdXJzb3I6IGdyYWJiaW5nO1xuICBjdXJzb3I6IC1tb3otZ3JhYmJpbmc7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcbn1cblxuLmRyYWdkcm9wLWNvbnRhaW5lciAuZXgtbW92ZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTc0YzNjO1xufVxuXG4uZHJhZ2Ryb3AtY29udGFpbmVyLmV4LW92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG59XG5cbiNsZWZ0LWxvdmVoYW5kbGVzID4gZGl2LFxuI3JpZ2h0LWxvdmVoYW5kbGVzID4gZGl2IHtcbiAgY3Vyc29yOiBpbml0aWFsO1xufVxuXG4uaGFuZGxlIHtcbiAgcGFkZGluZzogMCA1cHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGN1cnNvcjogbW92ZTtcbn1cblxuLmltYWdlLXRoaW5nIHtcbiAgbWFyZ2luOiAyMHB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5zbGFjay1qb2luIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLThweDtcbiAgbGluZS1oZWlnaHQ6IDE2cHg7XG59XG5cbi50YXNrYm9hcmQtbW9kYWwtZm9vdGVyIC5idG4tc2F2ZSB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TaskBoardService } from './taskboard.service';\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\nimport { Task } from './taskboard.model';\nimport { DragulaService } from 'ng2-dragula';\n\n@Component({\n  selector: 'app-taskboard',\n  templateUrl: './taskboard.component.html',\n  styleUrls: ['./taskboard.component.scss'],\n  providers: [TaskBoardService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TaskboardComponent {\n\n  @ViewChild('todoTitle', {static: false}) titleInputRef: ElementRef;\n  @ViewChild('todoMessage', {static: false}) messageInputRef: ElementRef;\n\n  BAG = \"task-group\";\n\n  tasks: Task[];\n  todo: Task[];\n  inProcess: Task[];\n  backLog: Task[];\n  completed: Task[];\n\n  constructor(private dragulaService: DragulaService, private elRef: ElementRef, private taskBoardService: TaskBoardService, private modalService: NgbModal) {\n    this.tasks = this.taskBoardService.tasks;\n    this.loadTasks();\n    dragulaService.drop(this.BAG)\n      .subscribe(({ el, target }) => {\n        this.updateTaskStatus(el.getAttribute('task-id'), target.id)\n      });\n  }\n\n  loadTasks() {\n\n    this.todo = this.tasks.filter((task: Task) => task.status === 'New');\n    this.inProcess = this.tasks.filter((task: Task) => task.status === 'In-Process');\n    this.backLog = this.tasks.filter((task: Task) => task.status === 'Pending');\n    this.completed = this.tasks.filter((task: Task) => task.status === 'Completed');\n  }\n\n  editTask(id: number) {\n    let task: Task = this.tasks.find(x => x.taskId === id);\n    const modalRef = this.modalService.open(CrudModalComponent);\n    modalRef.componentInstance.id = id; // should be the id\n    modalRef.componentInstance.data = { title: task.taskTitle, message: task.taskMessage }; // should be the data\n\n    modalRef.result.then((result) => {\n\n      let index = this.tasks.indexOf(task);\n      task.taskTitle = result.title;\n      task.taskMessage = result.message;\n      this.taskBoardService.UpdateTask(task, index).subscribe(data => {\n        this.tasks = data;\n        this.loadTasks();\n      });\n\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n  updateTaskStatus(id: string, status: string) {\n    if(id) {\n      let task: Task = this.tasks.find(x => x.taskId === +id);\n      let index = this.tasks.indexOf(task);\n        task.status = status;\n        this.taskBoardService.UpdateTask(task, index).subscribe(data => {\n          this.tasks = data;\n          this.loadTasks();\n        });\n    }\n\n  }\n\n  deleteTask(id: number) {\n    let task: Task = this.tasks.find(x => x.taskId === id);\n    let index = this.tasks.indexOf(task);\n    this.taskBoardService.deleteTask(index).subscribe(data => {\n      this.tasks = data;\n      this.loadTasks();\n    });\n  }\n\n  addTask() {\n    const modalRef = this.modalService.open(CrudModalComponent, );\n    modalRef.componentInstance.id = 0; // should be the id\n    modalRef.componentInstance.data = { title: '', message: ''}; // should be the data\n\n    modalRef.result.then((result) => {\n      this.taskBoardService.addNewTask(result.title, result.message).subscribe(data => {\n        this.tasks = data;\n        this.loadTasks();\n      });\n    }).catch((error) => {\n      console.log(error);\n    });\n  }\n\n\n}\n","export class Task {\n    public taskId: number;\n    public taskTitle: string;\n    public taskMessage: string;\n    public createdOn: string;\n    public createdBy: string;\n    public assignedTo: string;\n    public status: string;\n  \n    constructor(taskId: number, taskTitle: string, taskMessage:string, createdOn: string, createdBy: string, assignedTo: string, status: string) {\n      this.taskId = taskId;\n      this.taskTitle = taskTitle;\n      this.taskMessage = taskMessage;\n      this.createdOn = createdOn;\n      this.createdBy = createdBy;\n      this.assignedTo = assignedTo;\n      this.status = status;\n    }\n  }\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TaskboardRoutingModule } from \"./taskboard-routing.module\";\n\nimport { TaskboardComponent } from \"./taskboard.component\";\nimport { CrudModalComponent } from './crud-modal/crud-modal.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TaskboardRoutingModule,\n        DragulaModule,\n        FormsModule,\n        ReactiveFormsModule,\n        NgbModule\n    ],\n    declarations: [\n        TaskboardComponent,\n        CrudModalComponent\n    ],\n    entryComponents: [\n        CrudModalComponent\n    ]\n})\nexport class TaskboardModule { }\n","import { Injectable } from '@angular/core';\nimport { Task } from './taskboard.model';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n\n@Injectable()\nexport class TaskBoardService {\n\n    constructor() { }\n\n    public tasks: Task[] = [\n        new Task(\n            1,\n            'Responsive',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'الیزابت الیوت',\n            'assets/img/portrait/small/avatar-s-3.png',\n            'New'),\n        new Task(\n            2,\n            'QA Testing',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'الیزابت الیوت',\n            'assets/img/portrait/small/avatar-s-3.png',\n            'New'),\n        new Task(\n            3,\n            'Budget',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'May 17',\n            'الیزابت الیوت',\n            'assets/img/portrait/small/avatar-s-3.png',\n            'New'),\n        new Task(\n            4,\n            'checklist',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.png',\n            'In-Process'),\n        new Task(\n            5,\n            'Navigation',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.png',\n            'In-Process'),\n        new Task(\n            6,\n            'Bootstrap 4',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Apr 11',\n            'Bruce Reid',\n            'assets/img/portrait/small/avatar-s-1.png',\n            'In-Process'),\n        new Task(\n            7,\n            'Assessment',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'کلی رایز',\n            'assets/img/portrait/small/avatar-s-5.png',\n            'Pending'),\n        new Task(\n            8,\n            'Schedule',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'کلی رایز',\n            'assets/img/portrait/small/avatar-s-5.png',\n            'Pending'),\n        new Task(\n            9,\n            'Unit tests',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Jun 19',\n            'کلی رایز',\n            'assets/img/portrait/small/avatar-s-5.png',\n            'Pending'),\n        new Task(\n            10,\n            'Angular 5',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.png',\n            'Completed'),\n        new Task(\n            11,\n            'Fields',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.png',\n            'Completed'),\n        new Task(\n            12,\n            'Task board',\n            'Etiam porta sem malesuada magna mollis euismod.',\n            'Aug 22',\n            'Sara Ali',\n            'assets/img/portrait/small/avatar-s-7.png',\n            'Completed')\n    ];\n\n\n   addNewTask(title: string, message: string) {\n        let task: Task = {\n            taskId: Math.round(Math.random() * 10000000000),\n            taskTitle: title,\n            taskMessage: message,\n            createdOn: 'Nov 12',\n            createdBy: 'الیزابت الیوت',\n            assignedTo: 'assets/img/portrait/small/avatar-s-3.png',\n            status: 'New'\n        }\n        this.tasks.unshift(task);\n    return of(this.tasks.slice()).pipe(delay(100));\n        \n    }\n    UpdateTask(task: Task, index: number) {\n        // this.tasks.splice(index, 1, task);\n        this.tasks = this.tasks.map(i => {\n            if(i.taskId === task.taskId) {\n              return Object.assign({}, i, task);\n            }\n            return i;\n          })\n          return of(this.tasks.slice()).pipe(delay(1000));\n    }\n    deleteTask(index: number) {\n        this.tasks.splice(index, 1);\n        return of(this.tasks.slice()).pipe(delay(100));\n    }\n\n}"],"sourceRoot":"webpack:///"}