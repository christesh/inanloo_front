import { SimpleDateInterface } from './SimpleDate.interface';
import { JalaliDateValidatorService } from './jalali-date-validator.service';
/**
 * This class converts Jalali date to Georgian and vase versa. You can use all of the methods as static methods.
 *
 */
export declare class JalaliDateCalculatorService {
    validator: JalaliDateValidatorService;
    constructor(validator: JalaliDateValidatorService);
    /**
     * Calculates the Julian Day number from Gregorian or Julian calendar dates.
     *
     * Only some code cleaning applied to the source code.
     *
     * The procedure was tested to be good since 1 March, -100100 (of both calendars) up to a few million years into the future.
     *
     * @param gDate an instance of javascript date representing a Georgian date.
     *
     * [Implementation in source code]{@link https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L195}
  
     */
    numberOfPassedGDays(gDate: Date): number;
    /**
     * Returns number of passed days from source day in jalali calendar to the given jalali date.
     * @param jYear full jalali year like 1397
     * @param jMonth starts from zero
     * @param jDay day number starts from one
     */
    numberOfPassedJDays(jYear: number, jMonth: number, jDay: number): number;
    /**
     * Creates a javascript Date object from number of passed days in Georgian calendar representing Georgian date.
     *
     * [Implementation in source code]{@link https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L213}
     */
    createGDateFromDays(numOfDays: number): Date;
    /**
     * This function returns number of passed leap years from AD 621 until targetGYear.
     * @param targetGYear is full year number like 2018
     *
     * [Implementation in source code]{@link https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L110}
     */
    numOfGLeapYears(targetGYear: number): number;
    /**
     * first day of the Farvardin month in Jalali calendar is in March month. This method returns the day number of new jalali year in March.
     * The day number starts from 1 not zero and is equal to the real numbers in the calendar.
     * @param jYear full jalali year like 1397
     */
    firstDayOfJYearInMarch(jYear: any): number;
    /**
     * Converts jalali year number to the georgian year. Output year is the georgian year that jalali year starts within it, not the year
     * that starts in the winter of jalali year.
     * @param jYear full jalali year like 1397
     */
    jalaliYearToGeorgianYear(jYear: number): number;
    /**
     * Converts georgian year to the jalali year. Output year is the jalali year that start within the Georgian year.
     * @param gYear full georgian year like 2018
     */
    georgianYearToJalaliYear(gYear: number): number;
    /**
     * this method converts Georgian date to the jalali date. Output is an object implementing SimpleDateInterface.
     *
     * ATTENTION: month number starts from 0, but day number starts from 1. Just like native javascript Date object.
     * @param gDate Georgian date as a javascript Date object.
     *
     * [Implementation in source code]{@link https://github.com/sijad/ts-jalaali/blob/296a7c2fa1816a5bbb0b11bbe3eb03ebc17059f6/src/jalaali.ts#L149}
     */
    convertToJalali(gDate: Date): SimpleDateInterface;
    /**
     * Converts a valid jalali date to a javascript Date object representing a equivalent Georgian date.
     * @param jYear a full Jalali year like 1397
     * @param jMonth starts from zero
     * @param jDay starts from 1
     * @throws InvalidJalaliDateError when inputted date is not a valid Jalali date.
     */
    convertToGeorgian(jYear: number, jMonth: number, jDay: number): Date;
}
