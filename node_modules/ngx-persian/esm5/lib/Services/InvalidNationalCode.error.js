/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * When mobile phone number is not valid this error will throw.
 */
var /**
 * When mobile phone number is not valid this error will throw.
 */
InvalidNationalCodeError = /** @class */ (function (_super) {
    tslib_1.__extends(InvalidNationalCodeError, _super);
    function InvalidNationalCodeError(nationalCode) {
        if (nationalCode === void 0) { nationalCode = ''; }
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        var _this = _super.apply(this, tslib_1.__spread(params)) || this;
        _this.nationalCode = nationalCode;
        // Maintains proper stack trace for where our error was thrown (only available on V8)
        // @ts-ignore
        if (Error.captureStackTrace) {
            // @ts-ignore
            Error.captureStackTrace(_this, InvalidNationalCodeError);
        }
        _this.message = "The national code value (" + _this.nationalCode + ") is not a valid national code.";
        return _this;
    }
    return InvalidNationalCodeError;
}(Error));
/**
 * When mobile phone number is not valid this error will throw.
 */
export { InvalidNationalCodeError };
if (false) {
    /** @type {?} */
    InvalidNationalCodeError.prototype.nationalCode;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW52YWxpZE5hdGlvbmFsQ29kZS5lcnJvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1wZXJzaWFuLyIsInNvdXJjZXMiOlsibGliL1NlcnZpY2VzL0ludmFsaWROYXRpb25hbENvZGUuZXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQTs7OztJQUE4QyxvREFBSztJQUVqRCxrQ0FBWSxZQUF5QjtRQUF6Qiw2QkFBQSxFQUFBLGlCQUF5QjtRQUFFLGdCQUFTO2FBQVQsVUFBUyxFQUFULHFCQUFTLEVBQVQsSUFBUztZQUFULCtCQUFTOztRQUFoRCxnREFFVyxNQUFNLFdBWWhCO1FBVkMsS0FBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFFakMscUZBQXFGO1FBQ3JGLGFBQWE7UUFDYixJQUFJLEtBQUssQ0FBQyxpQkFBaUIsRUFBRTtZQUMzQixhQUFhO1lBQ2IsS0FBSyxDQUFDLGlCQUFpQixDQUFDLEtBQUksRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO1NBQ3pEO1FBRUQsS0FBSSxDQUFDLE9BQU8sR0FBRyw4QkFBNEIsS0FBSSxDQUFDLFlBQVksb0NBQWlDLENBQUM7O0lBQ2hHLENBQUM7SUFDSCwrQkFBQztBQUFELENBQUMsQUFqQkQsQ0FBOEMsS0FBSyxHQWlCbEQ7Ozs7Ozs7SUFoQkMsZ0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXaGVuIG1vYmlsZSBwaG9uZSBudW1iZXIgaXMgbm90IHZhbGlkIHRoaXMgZXJyb3Igd2lsbCB0aHJvdy5cbiAqL1xuZXhwb3J0IGNsYXNzIEludmFsaWROYXRpb25hbENvZGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgbmF0aW9uYWxDb2RlOiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKG5hdGlvbmFsQ29kZTogc3RyaW5nID0gJycsIC4uLnBhcmFtcykge1xuXG4gICAgc3VwZXIoLi4ucGFyYW1zKTtcblxuICAgIHRoaXMubmF0aW9uYWxDb2RlID0gbmF0aW9uYWxDb2RlO1xuXG4gICAgLy8gTWFpbnRhaW5zIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24gKG9ubHkgYXZhaWxhYmxlIG9uIFY4KVxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEludmFsaWROYXRpb25hbENvZGVFcnJvcik7XG4gICAgfVxuXG4gICAgdGhpcy5tZXNzYWdlID0gYFRoZSBuYXRpb25hbCBjb2RlIHZhbHVlICgke3RoaXMubmF0aW9uYWxDb2RlfSkgaXMgbm90IGEgdmFsaWQgbmF0aW9uYWwgY29kZS5gO1xuICB9XG59XG4iXX0=