/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
/**
 * Formats a 10-digit number or string to national code format.
 */
var NationalCodePipe = /** @class */ (function () {
    function NationalCodePipe() {
    }
    /**
     * @param value a 10-digit number or a string only contains 10 digits.
     * @example 001-236547-5
     * @return a formatted text from 10-digit input or an empty string if length of the input is not 10.
     */
    /**
     * \@example 001-236547-5
     * @param {?} value a 10-digit number or a string only contains 10 digits.
     * @return {?} a formatted text from 10-digit input or an empty string if length of the input is not 10.
     */
    NationalCodePipe.prototype.transform = /**
     * \@example 001-236547-5
     * @param {?} value a 10-digit number or a string only contains 10 digits.
     * @return {?} a formatted text from 10-digit input or an empty string if length of the input is not 10.
     */
    function (value) {
        value = String(value);
        if (value.length !== 10) {
            return '';
        }
        return value.substring(0, 3) + "-" + value.substring(3, 9) + "-" + value[9];
    };
    NationalCodePipe.decorators = [
        { type: Pipe, args: [{ name: 'nationalCode' },] }
    ];
    return NationalCodePipe;
}());
export { NationalCodePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aW9uYWxDb2RlLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGVyc2lhbi8iLCJzb3VyY2VzIjpbImxpYi9QaXBlcy9uYXRpb25hbENvZGUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7Ozs7QUFLbkQ7SUFBQTtJQWFBLENBQUM7SUFWQzs7OztPQUlHOzs7Ozs7SUFDSCxvQ0FBUzs7Ozs7SUFBVCxVQUFVLEtBQXNCO1FBQzlCLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEIsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLEVBQUUsRUFBRTtZQUFFLE9BQU8sRUFBRSxDQUFDO1NBQUU7UUFDdkMsT0FBVSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBSSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBSSxLQUFLLENBQUMsQ0FBQyxDQUFHLENBQUM7SUFDekUsQ0FBQzs7Z0JBWkYsSUFBSSxTQUFDLEVBQUMsSUFBSSxFQUFFLGNBQWMsRUFBQzs7SUFhNUIsdUJBQUM7Q0FBQSxBQWJELElBYUM7U0FaWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBGb3JtYXRzIGEgMTAtZGlnaXQgbnVtYmVyIG9yIHN0cmluZyB0byBuYXRpb25hbCBjb2RlIGZvcm1hdC5cbiAqL1xuQFBpcGUoe25hbWU6ICduYXRpb25hbENvZGUnfSlcbmV4cG9ydCBjbGFzcyBOYXRpb25hbENvZGVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB2YWx1ZSBhIDEwLWRpZ2l0IG51bWJlciBvciBhIHN0cmluZyBvbmx5IGNvbnRhaW5zIDEwIGRpZ2l0cy5cbiAgICogQGV4YW1wbGUgMDAxLTIzNjU0Ny01XG4gICAqIEByZXR1cm4gYSBmb3JtYXR0ZWQgdGV4dCBmcm9tIDEwLWRpZ2l0IGlucHV0IG9yIGFuIGVtcHR5IHN0cmluZyBpZiBsZW5ndGggb2YgdGhlIGlucHV0IGlzIG5vdCAxMC5cbiAgICovXG4gIHRyYW5zZm9ybSh2YWx1ZTogc3RyaW5nIHwgbnVtYmVyKTogc3RyaW5nIHtcbiAgICB2YWx1ZSA9IFN0cmluZyh2YWx1ZSk7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gMTApIHsgcmV0dXJuICcnOyB9XG4gICAgcmV0dXJuIGAke3ZhbHVlLnN1YnN0cmluZygwLCAzKX0tJHt2YWx1ZS5zdWJzdHJpbmcoMywgOSl9LSR7dmFsdWVbOV19YDtcbiAgfVxufVxuIl19